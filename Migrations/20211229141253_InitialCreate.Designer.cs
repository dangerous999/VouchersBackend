// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using VouchersBackend.Database;

#nullable disable

namespace VouchersBackend.Migrations
{
    [DbContext(typeof(VoucherdbContext))]
    [Migration("20211229141253_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("VouchersBackend.Models.VoucherDb", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric")
                        .HasColumnName("amount");

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int>("Dislikes")
                        .HasColumnType("integer")
                        .HasColumnName("dislikes");

                    b.Property<int>("Likes")
                        .HasColumnType("integer")
                        .HasColumnName("likes");

                    b.Property<long>("TypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("type_id");

                    b.Property<long>("UnitId")
                        .HasColumnType("bigint")
                        .HasColumnName("unit_id");

                    b.Property<DateTime>("ValidFrom")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("valid_from");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("valid_to");

                    b.Property<long>("WebshopId")
                        .HasColumnType("bigint")
                        .HasColumnName("webshop_id");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.HasIndex("UnitId");

                    b.HasIndex("WebshopId");

                    b.ToTable("voucher", (string)null);
                });

            modelBuilder.Entity("VouchersBackend.Models.WebshopDb", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("url");

                    b.HasKey("Id");

                    b.ToTable("webshop", (string)null);
                });

            modelBuilder.Entity("VouchersBackend.UnitDb", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("unit", (string)null);
                });

            modelBuilder.Entity("VouchersBackend.VoucherTypeDb", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.ToTable("voucher_type", (string)null);
                });

            modelBuilder.Entity("VouchersBackend.Models.VoucherDb", b =>
                {
                    b.HasOne("VouchersBackend.VoucherTypeDb", "Type")
                        .WithMany("Vouchers")
                        .HasForeignKey("TypeId")
                        .IsRequired()
                        .HasConstraintName("voucher_voucher_type_FK");

                    b.HasOne("VouchersBackend.UnitDb", "Unit")
                        .WithMany("Vouchers")
                        .HasForeignKey("UnitId")
                        .IsRequired()
                        .HasConstraintName("voucher_unit_FK");

                    b.HasOne("VouchersBackend.Models.WebshopDb", "Webshop")
                        .WithMany("Vouchers")
                        .HasForeignKey("WebshopId")
                        .IsRequired()
                        .HasConstraintName("voucher_webshop_FK");

                    b.Navigation("Type");

                    b.Navigation("Unit");

                    b.Navigation("Webshop");
                });

            modelBuilder.Entity("VouchersBackend.Models.WebshopDb", b =>
                {
                    b.Navigation("Vouchers");
                });

            modelBuilder.Entity("VouchersBackend.UnitDb", b =>
                {
                    b.Navigation("Vouchers");
                });

            modelBuilder.Entity("VouchersBackend.VoucherTypeDb", b =>
                {
                    b.Navigation("Vouchers");
                });
#pragma warning restore 612, 618
        }
    }
}
